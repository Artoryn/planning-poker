@using PlanningPoker.Shared.ViewModels

<div class="card">
    <div class="card-body">
        <h5 class="card-title">Participants</h5>
        <div class="row">
            <table class="table table-striped">
                <thead>
                    <tr>
                        <th></th>
                        <th>Name</th>
                        <th>Vote</th>
                    </tr>
                </thead>
                <tbody>
                    @foreach (var player in Server?.Players ?? Enumerable.Empty<PlayerViewModel>())
                    {
                        var hasVoted = Server?.CurrentSession?.Votes?.ContainsKey(player.PublicId.ToString()) ?? false;
                        var currentPlayerVote = hasVoted ? Server.CurrentSession.Votes[player.PublicId.ToString()] : string.Empty;
                        <tr class="@(hasVoted ? "table-success" : "")">
                            <td>
                                @if (hasVoted)
                                {
                                    <span class="oi oi-check"></span>
                                }
                            </td>
                            <td>
                                @player.Name
                            </td>
                            <td>
                                @currentPlayerVote
                            </td>
                        </tr>
                    }
                </tbody>
            </table>
        </div>
    </div>
</div>

@code {

    [Parameter]
    public PlayerViewModel CurrentPlayer { get; set; }

    [Parameter]
    public EventCallback<PlayerViewModel> CurrentPlayerChanged { get; set; }

    [Parameter]
    public PokerServerViewModel Server { get; set; }

    [Parameter]
    public EventCallback<PokerServerViewModel> ServerChanged { get; set; }

}