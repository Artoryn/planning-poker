@page "/"
@using Microsoft.AspNetCore.SignalR.Client
@inject NavigationManager NavigationManager

@if (string.IsNullOrWhiteSpace(CreatedServerAddress))
{
    <div class="row">
        <div class="col-md-12">
            <h2>Welcome to Planning Poker Lite!</h2>
            <p>Press below to create a room for you. This will create a link, where you and your participants can create a user and start voting.</p>
            <p>Happy planning!</p>
        </div>
    </div>
    <div class="row">
        <div class="col-md-12">
            <div class="form-group">
                <button @onclick="Create" disabled="@(HasCreated)">Create room</button>
            </div>
        </div>
    </div>
}
else
{
    <div class="row">
        <div class="col-md-12">
            <a href="@CreatedServerAddress" class="btn btn-primary">Join room</a>
        </div>
    </div>
    <div class="row">
        <div class="col-md-12">
            <p>Below is the link to your room. Send this to your participants, and start planning!</p>
            <input class="form-control" value="@CreatedServerAddress" disabled="disabled"/>
        </div>
    </div>
}

@code {
    private HubConnection _hubConnection;

    protected override async Task OnInitializedAsync()
    {
        _hubConnection = new HubConnectionBuilder()
            .WithUrl(NavigationManager.ToAbsoluteUri("/hubs/poker"))
            .Build();
        await _hubConnection.StartAsync();
    }

    async Task Create()
    {
        var serverId = await _hubConnection.InvokeAsync<Guid>("Create");
        var uri = NavigationManager.ToAbsoluteUri($"/server/{serverId}");
        CreatedServerAddress = uri.AbsoluteUri;
        HasCreated = true;
        StateHasChanged();
    }

    public string? CreatedServerAddress { get; set; }

    public bool HasCreated = false;
}